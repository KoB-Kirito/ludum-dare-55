[gd_resource type="VisualShader" load_steps=6 format=3 uid="uid://b37sg3cks41uh"]

[sub_resource type="VisualShaderNodeTexture2DParameter" id="VisualShaderNodeTexture2DParameter_uxrjw"]
parameter_name = "Main_texture"

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_l43mb"]
source = 5

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_q4mmh"]
input_name = "color"

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_bqr8x"]
default_input_values = [0, Quaternion(0, 0, 0, 0), 1, Quaternion(0, 0, 0, 0)]
op_type = 2
operator = 2

[sub_resource type="VisualShaderNodeBillboard" id="VisualShaderNodeBillboard_dgimv"]
billboard_type = 3
keep_scale = true

[resource]
code = "shader_type spatial;
render_mode blend_mix, depth_draw_opaque, cull_back, diffuse_lambert, specular_schlick_ggx;

uniform sampler2D Main_texture;



void vertex() {
	mat4 n_out2p0;
// GetBillboardMatrix:2
	{
		mat4 __wm = mat4(normalize(INV_VIEW_MATRIX[0]), normalize(INV_VIEW_MATRIX[1]), normalize(INV_VIEW_MATRIX[2]), MODEL_MATRIX[3]);
		__wm = __wm * mat4(vec4(cos(INSTANCE_CUSTOM.x), -sin(INSTANCE_CUSTOM.x), 0.0, 0.0), vec4(sin(INSTANCE_CUSTOM.x), cos(INSTANCE_CUSTOM.x), 0.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 0.0, 1.0));
		__wm = __wm * mat4(vec4(length(MODEL_MATRIX[0].xyz), 0.0, 0.0, 0.0), vec4(0.0, length(MODEL_MATRIX[1].xyz), 0.0, 0.0), vec4(0.0, 0.0, length(MODEL_MATRIX[2].xyz), 0.0), vec4(0.0, 0.0, 0.0, 1.0));
		n_out2p0 = VIEW_MATRIX * __wm;
	}


// Output:0
	MODELVIEW_MATRIX = n_out2p0;


}

void fragment() {
// Input:4
	vec4 n_out4p0 = COLOR;


	vec4 n_out3p0;
// Texture2D:3
	n_out3p0 = texture(Main_texture, UV);


// VectorOp:5
	vec4 n_out5p0 = n_out4p0 * n_out3p0;


// Output:0
	ALBEDO = vec3(n_out5p0.xyz);
	ALPHA = n_out3p0.x;


}
"
graph_offset = Vector2(-62.7387, -70.3048)
nodes/vertex/2/node = SubResource("VisualShaderNodeBillboard_dgimv")
nodes/vertex/2/position = Vector2(74.8635, 210.02)
nodes/vertex/connections = PackedInt32Array(2, 0, 0, 10)
nodes/fragment/0/position = Vector2(1020, 140)
nodes/fragment/2/node = SubResource("VisualShaderNodeTexture2DParameter_uxrjw")
nodes/fragment/2/position = Vector2(20, 160)
nodes/fragment/3/node = SubResource("VisualShaderNodeTexture_l43mb")
nodes/fragment/3/position = Vector2(400, 120)
nodes/fragment/4/node = SubResource("VisualShaderNodeInput_q4mmh")
nodes/fragment/4/position = Vector2(180, 0)
nodes/fragment/5/node = SubResource("VisualShaderNodeVectorOp_bqr8x")
nodes/fragment/5/position = Vector2(620, -80)
nodes/fragment/connections = PackedInt32Array(2, 0, 3, 2, 3, 0, 0, 1, 4, 0, 5, 0, 3, 0, 5, 1, 5, 0, 0, 0)
